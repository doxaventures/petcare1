- content_for :javascript do
  initialize_homepage();

- content_for :coverfade_class do
  = "without-text"

- content_for :extra_javascript do
  :javascript
    $( document ).ready(function() {
      var heights = $(".list-main-col").map(function() {
        return $(this).height();
      }).get(),

      maxHeight = Math.max.apply(null, heights);
     
      $(".list-main-col").height(maxHeight);
    });


- content_for :extra_javascript do
  :javascript 
    $( document ).ready(function() {
      var stickySidebar = new StickySidebar('#sidebar', {
        topSpacing: 0,
        bottomSpacing: 0,
        innerWrapperSelector: '.sidebar__inner'
      });
     });

- content_for :extra_javascript do
  :javascript
    $( document ).ready(function() {
      var heightNoScrollBars = $(window).height();
      var heights = $(".listpage-map-right").map(function() {
        return $(this).height();
      }).get(),
    
      maxHeight = Math.max.apply(null, heights);
    
      $(".home-map").height(heightNoScrollBars);
    });

- content_for :extra_javascript do
  - # maps.google can't be loaded twice
  - maps_key = MarketplaceHelper.google_maps_key(@current_community.id)
  - key_param = maps_key ? "&key=#{maps_key}" : ""
  - # Topbar adds its own maps script, otherwise add it if location search enabled or map is visible
  - needs_maps = !FeatureFlagHelper.feature_enabled?(:topbar_v1) && (main_search != :keyword || @view_type.eql?("map") || @view_type.eql?("list"))
  - needs_maps = true
  - if(needs_maps)
    = javascript_include_tag "https://maps.googleapis.com/maps/api/js?libraries=places#{key_param}"
  - if(@view_type.eql?("map"))
    = javascript_include_tag "markerclusterer.js"

- content_for :extra_javascript do
  :javascript
    $('.clear-button').on('click', function(e) {
    var category = $(this).attr("category");
    var sub_category = $(this).attr("sub_category");
    e.preventDefault();
    root_origin = window.location.origin
    if (category && sub_category) {
      window.location.replace(root_origin+"/s?category="+ category + "&sub_category=" + sub_category);
    }
    else if (category){
      window.location.replace(root_origin+"/s?category="+ category);
    }
    else{
      window.location.replace(root_origin+"/s");
    }
    })

- content_for :extra_javascript do
  :javascript
    $( document ).ready(function() {
    $('#filter_div').click(function(){
      $('#filter-section').toggleClass('filterDiv_mobile');
    });
      $('ul#category li').on('click', function(){
        $("ul#category li").removeClass('active');
        //var element = $(this).parent('li');

        $(this).addClass('active');
        var category_id = this.id;
        var subcategory_url = "/homepage/get_subcategories?category_id=" + category_id;
        $("ul#category li a").attr("href", "#sub-title");
        $.ajax({
          url: subcategory_url,
          type:  'GET',
          success: function(data) {
            var d = data["all_data"].sub_category;
            var category = data["all_data"].category_url;
            var sub = data["all_data"].sub_category_url;
            $('#subcategory').empty();
            for(var i = 0, j=0; i < d.length,j < sub.length; i++,j++){
              $('#subcategory').append("<li><a href=/s?category="+category+"&sub_category="+sub[j]+">"+d[i]+"</a></li>");
            }
          }
        })
      });
      $('.filtermenu li.has-sub>a').on('click', function(){
        $(this).removeAttr('href');
        var element = $(this).parent('li');
        if (element.hasClass('open')) {
          element.removeClass('open');
          element.find('li').removeClass('open');
          element.find('ul').slideUp();
        }
        else {
          element.addClass('open');
          element.children('ul').slideDown();
          element.siblings('li').children('ul').slideUp();
          element.siblings('li').removeClass('open');
          element.siblings('li').find('li').removeClass('open');
          element.siblings('li').find('ul').slideUp();
        }
      });
    });

- content_for :title_header do
  - if @big_cover_photo
    %h1.marketplace-lander-content-title= community_slogan.html_safe
    %p= community_description.html_safe
    - unless (is_homepage && !@current_community.private? && FeatureFlagHelper.feature_enabled?(:topbar_v1))
      .search-form
        - if @current_community.private?
          %a.inline-big-button{href: sign_up_path}
            .content
              = t("layouts.application.connect")
        - else
          - if(main_search == :location)
            = render partial: "location_bar"
          - else
            = render partial: "search_bar"
  -# elsif !(is_homepage && FeatureFlagHelper.feature_enabled?(:topbar_v1))
    .browse-view-search-form.align2
      - if(main_search == :location)
        = render partial: "location_bar"
      - else
        = render partial: "search_bar"

- content_for(:head) do
  - if seo_pagination_links[:prev].present?
    %link{rel: "prev", href: seo_pagination_links[:prev]}
  - if seo_pagination_links[:next].present?
    %link{rel: "next", href: seo_pagination_links[:next]}

- if @current_community.private? && @big_cover_photo
  - if @community_customization && @community_customization.private_community_homepage_content
    .community-customization-wrapper
      = @community_customization.private_community_homepage_content.html_safe
  - else
    = t(".this_is_private_community")

- else
  .listpage.clearfix
    .home-toolbar

      -# if listing_shape_menu_enabled || @category_menu_enabled
        .home-toolbar-show-filters-button-container
          .home-toolbar-show-filters-button#home-toolbar-show-filters
            = t(".filter")

      / .home-toolbar-button-group{:class => listing_shape_menu_enabled || @category_menu_enabled ? "filters-enabled" : ""}
      /   - ["grid", "list", "map"].each do |view_type|
      /     - selected_class = @view_type == view_type ? "selected" : ""
      /     = link_to search_path(search_params.merge(view: view_type)), :class => "home-toolbar-button-group-button #{selected_class}", :title => t("homepage.filters.#{view_type}_button") do
      /       = icon_tag(view_type, ["icon-fix", "home-button-group-icon"])
      /       %span.home-toolbar-button-text
      /         = t("homepage.filters.#{view_type}_button")

      - if listing_shape_menu_enabled || @category_menu_enabled
        .home-toolbar-filters.home-toolbar-filters-mobile-hidden#home-toolbar-filters
          -# if listing_shape_menu_enabled
            .toggle-container.home-toolbar-toggle-container
              .toggle.with-borders#home_toolbar-select-share-type{data: {toggle: '.home-toolbar-share-type-menu'}}
                .toggle-header-container
                  .toggle-header
                    - if selected_shape
                      = t(selected_shape[:name_tr_key])
                    - else
                      = t("homepage.filters.all_listing_types")

                  = icon_tag("dropdown", ["icon-dropdown"])

              .home-toolbar-share-type-menu.toggle-menu.hidden
                = link_to t("homepage.filters.all_listing_types"), search_path(search_params.merge({transaction_type: "all"}))
                - shapes.each do |shape|
                  = link_to search_path(search_params.merge({transaction_type: shape[:name]})), class:  "toggle-menu-subitem" do
                    = t(shape[:name_tr_key])

          - if @show_categories
            .toggle-container.home-toolbar-toggle-container.hidden-tablet
              .toggle.with-borders{data: {toggle: '#home-toolbar-categories-menu'}}
                .toggle-header-container
                  .toggle-header
                    - if selected_category
                      = selected_category.display_name(I18n.locale)
                    - else
                      = t("homepage.filters.all_categories")

                  = icon_tag("dropdown", ["icon-dropdown"])
              #home-toolbar-categories-menu.toggle-menu
                = link_to t("homepage.filters.all_categories"), search_path(search_params.merge({category: "all"}))
                - @main_categories.each do |category|
                  = link_to category.display_name(I18n.locale), search_path(search_params.merge({category: category}))
                  - if category.children
                    - category.children.each do |child|
                      - is_selected = selected_category == child
                      = link_to child.display_name(I18n.locale), search_path(search_params.merge({category: child})), :class => "toggle-menu-subitem"
          / Filters
          
    .listpage-in
      %div{:class => "col-12"}
      .home-toolbar-show-filters-button#filter_div.btn.cmn-btn.view-mobile FILTER
      - if @category_menu_enabled
        .col-2.no-pad#filter-section
          - if @show_categories
            .row
              .col-12
                .filter-section
                  .filtermenu
                    %ul
                      %li.active.has-sub
                        %a{:href => "#"}
                          %span
                            %i
                              = params["category"].present? && params["category"]!= "all" ? params["category"].titleize : "PET CATEGORIES"                            
                        %ul
                          - @main_categories.each do |category|
                            - show_subcategories = show_subcategory_list(category, Maybe(selected_category).id.to_i.or_else(nil)) 
                            %li
                              = link_to category.display_name(I18n.locale), search_path(search_params.merge({category: category, sub_category: nil})), :class => "home-categories-sub-color #{if show_subcategories then 'selected' end} #{if category.has_subcategories? then 'has-subcategories' end}", :data => {category: category.id}
                              =# category.display_name(I18n.locale)
                      %li.active.has-sub#sub-title
                        %a{:href => "#"}
                          %span
                            %i 
                              = params["sub_category"].present? ? selected_category.display_name(I18n.locale) : "SUB CATEGORIES" 
                        #subcategory
                        - if params["category"].present? && @subcategories.present?
                          %ul
                            - @subcategories.each do |child|
                              %li
                                - is_selected = selected_category == child
                                = link_to child.display_name(I18n.locale), search_path(search_params.merge({category: child.parent, sub_category: child})), :class => "home-categories-sub-color #{if is_selected then 'selected' end}", :data => {:"sub-category" =>child.id}
                  .hidden-tablet
                    - # Filters will be relocated to #desktop-filters when in desktop
                    #filters
                      = render :partial => "filters", :locals => { show_price_filter: show_price_filter, show_custom_fields: @show_custom_fields, filters: filters }
                  #desktop-filters 
                  .filtermenu.none-mar-bot                    
                    %ul
                      %li.active.has-sub
                        %a{:href => "#"}
                          %span
                            %h4 Brand
                        %ul.overflow-hgt
                          %li
                            - @brand.each do |brand|
                              .checkbox
                                %label.custom-checkbox
                                  - value = params["brand"].present? ? params["brand"].include?(brand.id.to_s) : false
                                  = check_box_tag "brand[]", brand.id, value
                                  = brand.name
                                  %b.checkmark 
                  .filtermenu.none-mar-bot
                    %ul
                      %li.active.has-sub
                        %a{:href => "#"}
                          %span
                            %h4 Colors
                        %ul.overflow-hgt
                          %li
                            - @colors.first(20).each do |color|
                              .checkbox
                                %label.custom-checkbox
                                  - value = params["selected_color"].present? ? params["selected_color"].include?(color.id.to_s) : false
                                  = check_box_tag "selected_color[]", color.id, value
                                  = color.name
                                  %b.checkmark      
                  .filtermenu.none-mar-bot
                    %ul
                      %li.active.has-sub
                        %a{:href => "#"}
                          %span
                            %h4 Size
                        %ul
                          %li
                            - ListingVariant.sizes.each do |key,value|
                              .checkbox
                                %label.custom-checkbox
                                  - value = params["size"].present? ? params["size"].include?(key) : false
                                  = check_box_tag "size[]", key, value
                                  = key.titleize
                                  %b.checkmark
                  .filtermenu.none-mar-bot                      
                    %ul
                      %li.active.has-sub
                        %a{:href => "#"}
                          %span
                            %h4 Length
                        %ul   
                          %li 
                            - ListingVariant.inches.each do |key,value|
                              .length-list  
                                %label
                                  - val = params["length"].present? ? params["length"].include?(key) : false
                                  = radio_button_tag "length", key, val
                                  = key
                  .filtermenu.none-mar-bot
                    %ul
                      %li.active.has-sub
                        %a{:href => "#"}
                          %span
                            %h4 Weight
                        %ul 
                          %li
                            - ListingVariant.weights.each do |key,value|
                              .length-list
                                %label
                                  - val = params["weight"].present? ? params["weight"].include?(key) : false
                                  = radio_button_tag "weight", key, val
                                  = key
                  .custom-side-btn  
                    %button{class: 'filter-button',type: 'submit'}
                      = t("homepage.custom_filters.update_view")
                    %button{class: 'filter-button clear-button',category: params["category"], sub_category: params["sub_category"]}
                      = 'Clear'
                    
                  - # Filters will be relocated here when in desktop

        .listpage-map-right.mpheight.col-8#content
          - if @listings.total_entries > 0
            .home-listings
              = render partial: "list_item", collection: @listings, as: :listing, locals: { shape_name_map: shape_name_map }
          - else
            .home-no-listings
              - if params[:q] || params[:category] || params[:share_type] # Some filter in use
                = t(".no_listings_with_your_search_criteria")
              - else
                = t(".no_listings_notification",
                      add_listing_link: link_to(t(".add_listing_link_text"),
                      new_listing_path(ref: "add_listing_link"))).html_safe
        .home-map.hidden-mobile.mpheight.col-2#sidebar
          = render :partial => "map", locals: { viewport: viewport }                      

      -# main_container_class = if @category_menu_enabled then "listpage-map-right" else "col-12" end
      -#%div{:class => main_container_class}
        - if @listings.total_entries > 0
          - if @view_type.eql?("map")
            .home-map
              = render :partial => "map", locals: { viewport: viewport }
          - else
            - if @view_type.eql?("grid")
              %div{class: @category_menu_enabled ? "home-fluid-thumbnail-grid-narrow" : "home-fluid-thumbnail-grid-wide"}
                .home-fluid-thumbnail-grid
                  = render partial: "grid_item", collection: @listings, as: :listing, locals: { show_distance: location_search_in_use }
            - else
              .home-listings
                - if (location_search_in_use)
                  = render partial: "list_item_with_distance", collection: @listings, as: :listing, locals: { shape_name_map: shape_name_map, show_distance: location_search_in_use }
                - else
                  = render partial: "list_item", collection: @listings, as: :listing, locals: { shape_name_map: shape_name_map }
            .home-loading-more
              = will_paginate(@listings)
              - item_container = if @view_type.eql?("grid") then '.home-fluid-thumbnail-grid' else '.home-listings' end
              = pageless(@listings.total_pages, item_container, current_search_path_without_page, t('.loading_more_content'), current_page)
        - else
          .home-no-listings
            - if params[:q] || params[:category] || params[:share_type] # Some filter in use
              = t(".no_listings_with_your_search_criteria")
            - else
              = t(".no_listings_notification",
                    add_listing_link: link_to(t(".add_listing_link_text"),
                    new_listing_path(ref: "add_listing_link"))).html_safe
